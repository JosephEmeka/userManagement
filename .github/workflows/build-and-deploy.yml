name: Build and Deploy to AWS EC2

on:
  push:
    branches:
      - in-dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/checkout@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Restore Maven Package
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-


      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t josephemekaonah/user_management:latest .

      - name: Push Docker image to Docker Hub
        run: docker push josephemekaonah/user_management:latest

      - name: SSH into AWS EC2 and deploy Docker image
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.INSTANCE_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY_WINDOWS }}
          port: 22
          script: |
            echo "Stopping and removing existing Docker container"
            docker stop my-app || true && docker rm my-app || true

            echo "Pulling latest Docker image from Docker Hub"
            docker pull your-dockerhub-username/my-app:latest

            echo "Running new Docker container"
            docker run -d --name my-app -p 8080:8080 your-dockerhub-username/my-app:latest

            echo "Checking if Docker container is running"
            docker ps

      - name: Verify deployment
        run: |
          echo "Checking if the application is accessible on the EC2 instance"
          curl http://$INSTANCE_IP:8080
          
          
      
        
        
        

        
              
